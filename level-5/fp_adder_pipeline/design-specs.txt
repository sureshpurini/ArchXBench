Design Name: pipelined_fp_adder
Module Name: fp_adder_pipeline

Inputs:
- clk                          // Clock signal
- rst                          // Synchronous reset
- a[31:0]                      // IEEE-754 single-precision operand A
- b[31:0]                      // IEEE-754 single-precision operand B
- add_sub                      // 0: addition, 1: subtraction
- valid_in                     // Input valid signal

Outputs:
- result[31:0]                 // IEEE-754 single-precision result
- valid_out                    // Output valid (after pipeline latency)

Parameters:
- LATENCY = 5                 // Pipeline depth (configurable)

Design Signature:

module fp_adder_pipeline #(
    parameter LATENCY = 5
) (
    input clk,
    input rst,
    input [31:0] a,
    input [31:0] b,
    input add_sub,
    input valid_in,
    output [31:0] result,
    output valid_out
);

Design Notes:
- Stage 1: Unpack operands → sign, exponent, significand.
- Stage 2: Exponent alignment and significand shift.
- Stage 3: Add/sub significands based on control.
- Stage 4: Normalize result.
- Stage 5: Round and pack into IEEE-754 format.

- Result latency = `LATENCY`, but throughput = 1 op/cycle after fill.
- Include detection logic for:
  • Zero inputs
  • Equal exponents
  • Overflow/underflow on exponent
  • Inexact result (rounding required)
  • NaN and INF propagation

Optional Features:
- Support for fused multiply-add integration
- Rounding mode control (e.g., trunc, round-up)
- Interface with AXI-stream or FPU instruction bus


