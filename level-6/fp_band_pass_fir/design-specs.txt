Design Name: fp_bandpass_fir_streaming
Module Name: fp_bandpass_fir

Inputs:
- clk                          // System clock
- rst                          // Active‐high synchronous reset
- valid_in                     // Input handshake
- data_in[31:0]                // 32‐bit IEEE‐754 float, hex‐encoded
- coeffs_mem[0:TAP_CNT−1]      // Preloaded band‐pass FIR coefficients (32‐bit floats)

Outputs:
- valid_out                    // Output handshake
- data_out[31:0]               // 32‐bit IEEE‐754 float result, hex‐encoded

Parameters:
- TAP_CNT = 63                 // Odd number of taps (31–255)
- PIPE_DEPTH = <integer>       // Pipeline depth per multiply/add

Design Signature:

module fp_bandpass_fir #(
    parameter TAP_CNT    = 63,
    parameter PIPE_DEPTH = 2
) (
    input                   clk,
    input                   rst,
    input                   valid_in,
    input       [31:0]      data_in,         // IEEE‐754 float, hex
    output                  valid_out,
    output      [31:0]      data_out         // IEEE‐754 float, hex
);

Design Notes:
- Maintains a shift‐register of length TAP_CNT to store the latest TAP_CNT samples.
- Each tap multiplies sample[i] by coeffs_mem[i] using a pipelined IEEE‐754 multiplier.
- Accumulates all TAP_CNT products via a pipelined tree of IEEE‐754 adders to form one band‐pass output sample.
- Zero‐extension (input +0.0) for the first TAP_CNT−1 cycles after reset.
- Coefficients implement band‐pass response—often computed as the difference of two low‐pass windows.
- valid_out asserted as soon as enough samples have filled the pipeline.
- Floating‐point adders/multipliers must be IEEE‐754 compliant.
- Inputs and outputs remain in hex‐string form. The testbench will convert back and forth.

Optional Features:
- Runtime coefficient update bus for dynamic band adjustments.
- Parameterizable multiplier/adder pipeline depth to achieve higher clock rates.
- Ability to bypass filter (UNITY_GAIN mode) via a parameter or control bit.
